@model PaginatedJobViewModel

@using SearchJob.Helper
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers



<!DOCTYPE html>
<html lang="ru">
<head>
    <title>Поиск вакансий</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.1.3/css/bootstrap.min.css">
</head>
<body>
    <div class="container mt-5">
        <h1 class="mb-4">Поиск вакансий</h1>

        @if (TempData["ErrorMessage"] != null)
        {
            <div id="alertMessage" class="alert alert-danger">
                @TempData["ErrorMessage"]
            </div>
            
            <script>
                setTimeout(function () {
                    var alertElement = document.getElementById("alertMessage");
                    if (alertElement) {
                        alertElement.style.display = "none";
                    }
                }, 3000);
            </script>
        }

        <form method="get" asp-controller="Job" asp-action="search">
            <div class="input-group mb-3">
                <input type="text" class="form-control" placeholder="Введите название вакансии" name="searchString" value="@ViewData["CurrentFilter"]" />
                <button class="btn btn-primary" type="submit">Поиск</button>
            </div>
        </form>

        <div class="mb-3">
            <a href="/api/favorites/GetFavorites" class="btn btn-secondary">Избранное</a>
            <a href="/api/account/profile" class="btn btn-secondary">Профиль</a>
        </div>

        <h2>Найдено @Model.TotalJobs вакансий</h2>

        <div class="row">
            @foreach (var job in Model.Jobs)
            {
                <div class="col-md-4 mb-4">
                    <a href="@Url.Action("Details", "Job", new { id = job.Id })" class="text-decoration-none text-dark">
                        <div class="card h-100 d-flex flex-column">
                            <div class="card-body flex-grow-1">
                                <h5 class="card-title">@job.Title</h5>
                                <h6 class="card-subtitle mb-2 text-muted">@job.CompanyName</h6>
                                <p class="card-text">@job.Description</p>
                            </div>
                            <div class="mt-auto">
                                <p class="card-text">
                                    <small class="text-muted">Зарплата: от @job.SalaryFrom</small>
                                </p>
                                <form method="post" asp-controller="Favorite" asp-action="AddFavorite">
                                    <input type="hidden" name="Id" value="@job.Id" />
                                    <button type="submit" class="btn btn-secondary">Добавить в избранное</button>
                                </form>
                            </div>
                        </div>
                    </a>
                </div>
            }
        </div>

        @{
            int totalPages = Model.TotalPages;
            int currentPage = Model.CurrentPage;
            int pageRange = 5; 
            int startPage = Math.Max(1, currentPage - pageRange);
            int endPage = Math.Min(totalPages, currentPage + pageRange);
        }

        <!-- Пагинация -->
        <nav>
            <ul class="pagination">
                
                @if (currentPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("GetAll", new { page = 1 })">&laquo;</a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("GetAll", new { page = currentPage - 1 })">&lsaquo;</a>
                    </li>
                }

                
                @for (int i = startPage; i <= endPage; i++)
                {
                    <li class="page-item @(i == currentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Action("GetAll", new { page = i })">@i</a>
                    </li>
                }

                
                @if (currentPage < totalPages)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("GetAll", new { page = currentPage + 1 })">&rsaquo;</a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("GetAll", new { page = totalPages })">&raquo;</a>
                    </li>
                }
            </ul>
        </nav>

        <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.1.3/js/bootstrap.bundle.min.js"></script>
    </div>
</body>
</html>